<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>sm.clagenna</groupId>
	<artifactId>imaging</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<!--
	easy way to set up JavFX on eclipse:
	https://pragmaticways.com/how-to-add-javafx-to-eclipse-the-easy-way/ 
	-->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mainClassName>sm.claudio.imaging.javafx.MainAppFxml</mainClassName>
		<compiler.plugin>3.11.0</compiler.plugin>
		<lo4j2.vers>2.14.0</lo4j2.vers>
		<java.version>21</java.version>
		<javafx.version>21</javafx.version>
		<lombok.version>1.18.30</lombok.version>
		<jpro.version>2022.1.6</jpro.version>
		<gson.version>2.10.1</gson.version>
		<jackson.version>2.5.3</jackson.version>
		<gdrive.dir>F:/Google Drive/Util/java</gdrive.dir>
		<metadata.version>2.18.0</metadata.version>
	</properties>
	<dependencies>
		<!--  Gson: Java to JSON conversion -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<version>12.4.0.jre11</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.drewnoakes</groupId>
			<artifactId>metadata-extractor</artifactId>
			<version>${metadata.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx</artifactId>
			<version>${javafx.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-fxml -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-web -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-web</artifactId>
			<version>16</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-media -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-media</artifactId>
			<version>18-ea+7</version>
		</dependency>
		<!-- per la swzione 8 prove con JFoenix -->
		<dependency>
			<groupId>com.jfoenix</groupId>
			<artifactId>jfoenix</artifactId>
			<version>9.0.10</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.controlsfx/controlsfx -->
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>11.1.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		<!--
		https://mvnrepository.com/artifact/org.apache.commons/commons-imaging 
		-->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-imaging</artifactId>
			<version>1.0-alpha2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-cli/commons-cli -->
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.4</version>
		</dependency>
		<!--
 <dependency> <groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId> 
			<version>${lo4j2.vers}</version>
		</dependency> <dependency> <groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId> <version>${lo4j2.vers}</version>
		</dependency> 
		-->
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${lo4j2.vers}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${lo4j2.vers}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<profiles>
		
		<profile>
			<id>local</id>
			<build>
				<plugins/>
			</build>
		</profile>
		
		<profile>
			<id>remote</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4.1</version>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<finalName>${project.artifactId}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<archive>
								<manifest>
									<mainClass>${mainClassName}</mainClass>
								</manifest>
							</archive>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="target/imaging.jar" toDir="${gdrive.dir}" overwrite="true"/>
										<copy file="bin/imaging.cmd" toDir="${gdrive.dir}" overwrite="true"/>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>delombok</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>${compiler.plugin}</version>
						<configuration>
							<!--
  compilerArgs> - - enable -
							preview</compilerArgs	
							-->
							<source>${maven.compiler.source}</source>
							<target>${maven.compiler.target}</target>
							<fork>true</fork>
							<compilerArgs>
								<!--
  arg enable-preview< / arg 
								-->
								<arg>-Xlint:all</arg>
								<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
								<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
								<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
								<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
								<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
								<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
								<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
								<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
								<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
								<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED</arg>
							</compilerArgs>
							<annotationProcessorPaths>
								<path>
									<groupId>org.projectlombok</groupId>
									<artifactId>lombok</artifactId>
									<version>${lombok.version}</version>
								</path>
							</annotationProcessorPaths>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok-maven-plugin</artifactId>
						<version>1.18.20.0</version>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>delombok</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jpro</id>
			<pluginRepositories>
				<pluginRepository>
					<id>jpro - sandec repository</id>
					<url>https://sandec.jfrog.io/artifactory/repo</url>
				</pluginRepository>
			</pluginRepositories>
			<repositories>
				<repository>
					<id>jpro - sandec repository</id>
					<url>https://sandec.jfrog.io/artifactory/repo</url>
				</repository>
			</repositories>
			<build>
				<plugins>
					<plugin>
						<groupId>com.sandec.jpro</groupId>
						<artifactId>jpro-maven-plugin</artifactId>
						<version>${jpro.version}</version>
						<configuration>
							<visible>false</visible>
							<JVMArgs>
								<!--
 <JVMArg>your-args</JVMArg> 
								-->
							</JVMArgs>
							<mainClassName>${mainClassName}</mainClassName>
							<openingPath>/</openingPath>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>copy</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="target/imaging.jar" toDir="${gdrive.dir}" overwrite="true"/>
										<copy file="imaging.cmd" toDir="${gdrive.dir}" overwrite="true"/>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<build>
		<finalName>imaging</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<!-- This is required by bnd-maven-plugin -->
						<!--
 manifestFile>
						${project.build.outputDirectory}/META-INF/MANIFEST.MF
						</manifestFile>
						<manifestEntries>
						<Automatic-Module-Name>commons.cli</Automatic-Module-Name>
						</manifestEntries 
						-->
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.plugin}</version>
				<configuration>
					<!--
   compilerArgs> - - enable - preview</compilerArgs 
					-->
					<source>${java.version}</source>
					<target>${java.version}</target>
					<fork>true</fork>
					<compilerArgs>
						<!--
   arg  enable-preview< / arg 
						-->
						<arg>-Xlint:all</arg>
						<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
						<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
						<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
						<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
						<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
						<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
						<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
						<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
						<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
						<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED</arg>
					</compilerArgs>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>0.0.6</version>
				<configuration>
					<mainClass>${mainClassName}</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.15</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
